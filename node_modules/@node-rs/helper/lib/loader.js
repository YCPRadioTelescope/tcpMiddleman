"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadBinding = void 0;
const fs_1 = require("fs");
const os_1 = require("os");
const path_1 = require("path");
const SupportedPlatforms = new Set(['darwin', 'win32', 'linux']);
function loadBinding(dirname, filename = 'index', packageName) {
    const platformName = os_1.platform();
    if (!SupportedPlatforms.has(platformName)) {
        throw new TypeError(`Unsupported platform: ${platformName}, only support for ${[...SupportedPlatforms.values()].join(', ')}`);
    }
    const bindingFilePath = path_1.join(dirname, `${filename}.${platformName}.node`);
    const localMuslBindigFilePath = path_1.join(dirname, `${filename}.linux-musl.node`);
    const muslExistedInLocal = fs_1.existsSync(localMuslBindigFilePath);
    if (platformName === 'linux') {
        try {
            return require(bindingFilePath);
        }
        catch (e1) {
            if (muslExistedInLocal) {
                try {
                    return require(localMuslBindigFilePath);
                }
                catch (e) {
                    throw new TypeError(`Loading linux musl addon in local path failed: ${e.message}, Loading linux addon in local path failed: ${e1.message}`);
                }
            }
        }
    }
    if (!fs_1.existsSync(bindingFilePath)) {
        if (!packageName) {
            throw new TypeError(`Could not find binding file on path ${bindingFilePath}`);
        }
        const platformName = os_1.platform();
        try {
            return require(`${packageName}-${platformName}`);
        }
        catch (e1) {
            if (platformName === 'linux') {
                try {
                    return require(`${packageName}-linux-musl`);
                }
                catch (e) {
                    throw new TypeError(`Loading linux musl addon Error: ${e.message}, Loading linux addon Error: ${e1.message}`);
                }
            }
            else {
                throw new TypeError('Not compatible with your platform. Error message: ' + e1.message);
            }
        }
    }
    return require(bindingFilePath);
}
exports.loadBinding = loadBinding;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2xvYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwyQkFBK0I7QUFDL0IsMkJBQTZCO0FBQzdCLCtCQUEyQjtBQUUzQixNQUFNLGtCQUFrQixHQUFHLElBQUksR0FBRyxDQUFrQixDQUFDLFFBQVEsRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQTtBQUVqRixTQUFnQixXQUFXLENBQUMsT0FBZSxFQUFFLFFBQVEsR0FBRyxPQUFPLEVBQUUsV0FBb0I7SUFDbkYsTUFBTSxZQUFZLEdBQUcsYUFBUSxFQUFFLENBQUE7SUFDL0IsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsRUFBRTtRQUN6QyxNQUFNLElBQUksU0FBUyxDQUNqQix5QkFBeUIsWUFBWSxzQkFBc0IsQ0FBQyxHQUFHLGtCQUFrQixDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQ3pHLENBQUE7S0FDRjtJQUVELE1BQU0sZUFBZSxHQUFHLFdBQUksQ0FBQyxPQUFPLEVBQUUsR0FBRyxRQUFRLElBQUksWUFBWSxPQUFPLENBQUMsQ0FBQTtJQUN6RSxNQUFNLHVCQUF1QixHQUFHLFdBQUksQ0FBQyxPQUFPLEVBQUUsR0FBRyxRQUFRLGtCQUFrQixDQUFDLENBQUE7SUFDNUUsTUFBTSxrQkFBa0IsR0FBRyxlQUFVLENBQUMsdUJBQXVCLENBQUMsQ0FBQTtJQUU5RCxJQUFJLFlBQVksS0FBSyxPQUFPLEVBQUU7UUFDNUIsSUFBSTtZQUNGLE9BQU8sT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFBO1NBQ2hDO1FBQUMsT0FBTyxFQUFFLEVBQUU7WUFDWCxJQUFJLGtCQUFrQixFQUFFO2dCQUN0QixJQUFJO29CQUNGLE9BQU8sT0FBTyxDQUFDLHVCQUF1QixDQUFDLENBQUE7aUJBQ3hDO2dCQUFDLE9BQU8sQ0FBQyxFQUFFO29CQUNWLE1BQU0sSUFBSSxTQUFTLENBQ2pCLGtEQUFrRCxDQUFDLENBQUMsT0FBTywrQ0FBK0MsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUN2SCxDQUFBO2lCQUNGO2FBQ0Y7U0FDRjtLQUNGO0lBRUQsSUFBSSxDQUFDLGVBQVUsQ0FBQyxlQUFlLENBQUMsRUFBRTtRQUNoQyxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ2hCLE1BQU0sSUFBSSxTQUFTLENBQUMsdUNBQXVDLGVBQWUsRUFBRSxDQUFDLENBQUE7U0FDOUU7UUFDRCxNQUFNLFlBQVksR0FBRyxhQUFRLEVBQUUsQ0FBQTtRQUUvQixJQUFJO1lBQ0YsT0FBTyxPQUFPLENBQUMsR0FBRyxXQUFXLElBQUksWUFBWSxFQUFFLENBQUMsQ0FBQTtTQUNqRDtRQUFDLE9BQU8sRUFBRSxFQUFFO1lBQ1gsSUFBSSxZQUFZLEtBQUssT0FBTyxFQUFFO2dCQUM1QixJQUFJO29CQUNGLE9BQU8sT0FBTyxDQUFDLEdBQUcsV0FBVyxhQUFhLENBQUMsQ0FBQTtpQkFDNUM7Z0JBQUMsT0FBTyxDQUFDLEVBQUU7b0JBQ1YsTUFBTSxJQUFJLFNBQVMsQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDLE9BQU8sZ0NBQWdDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFBO2lCQUM5RzthQUNGO2lCQUFNO2dCQUNMLE1BQU0sSUFBSSxTQUFTLENBQUMsb0RBQW9ELEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFBO2FBQ3ZGO1NBQ0Y7S0FDRjtJQUVELE9BQU8sT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFBO0FBQ2pDLENBQUM7QUFsREQsa0NBa0RDIn0=